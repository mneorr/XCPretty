#!/usr/bin/env ruby
$:.unshift File.expand_path('../../lib', __FILE__)
require 'xcpretty'
require 'optparse'

if RUBY_VERSION < '1.8.7'
  abort "error: XCPretty requires Ruby 1.8.7 or higher."
end

report_formats = {
  "junit" => XCPretty::JUnit
}

constructor = {
  :unicode => true,
  :colorize => false,
  :formatter => XCPretty::Simple
}

reporters = []

OptionParser.new do |opts|
  opts.banner = "Usage: xcodebuild [options] | xcpretty"
  opts.on('-t', '--test', 'Use RSpec style output') do
    constructor[:formatter] = XCPretty::RSpec
  end
  opts.on('-s', '--simple', 'Use simple output (default)') do
    constructor[:formatter] = XCPretty::Simple
  end
  opts.on('-c', '--color', 'Use colorized output') do
    constructor[:colorize] = true
  end
  opts.on('--no-utf', 'Disable unicode characters in output') do
    constructor[:unicode] = false
  end
  opts.on("-r", "--report FORMAT", "Run FORMAT reporter",
                "  Choices: #{report_formats.keys.join(', ')}") do |format|
    reporters << report_formats[format]
  end
  opts.on_tail('-h', '--help', 'Show this message') { puts opts; exit }
  opts.on_tail("-v", "--version", "Show version") { puts XCPretty::VERSION; exit }
  opts.parse!
end

printer = XCPretty::Printer.new(constructor)
reporters = reporters.compact.map(&:new)

ARGF.each_line do |line|
  printer.pretty_print(line)
  reporters.each { |r| r.handle(line) }
end

reporters.each(&:finish)

